    .container{ ЭТО ОПИСАНИЕ КЛАССА (Т.К. ОН НАЧИНАЕТСЯ С ТОЧКИ - ОПИСЫВАЕТ КОНТЕЙНЕР В КОТОРОМ БУДУТ СОДЕРЖАТЬСЯ ITEM - ТЕКСТ КАРТИНКИ)
      display: grid; ПИШЕМ ЧТО КОНТЕЙНЕР БУДЕТ ОТОБРАЖАТЬСЯ КАК СЕТКА
      grid-template-areas: С ПОМОЩЬЮ ДАННОГО КОМПОНЕНТА ВРЕСТКИ МОЖНО ГИБКО НАСТРАИВАТЬ ОТОБРАЖЕНИЕ СЕТКИ
ЕСТЬ И ДРУГИЕ КОМПОНЕНТЫ ОТНОСЯЩИЕСЯ К КОЛОНКАМ И СТРОКАМ: ТАМ НАПРЯМУЮ ЗАДАЮТСЯ РАЗМЕРЫ КОЛОНОК И СТРОК СООТВЕТСТВЕННО
        "header header" ТУТ НАЧИНАЮТСЯ СТРОКИ В КАЖДОЙ ИЗ КОТОРЫХ ПО ДВА СЛОВА: ЭТИ СЛОВА ЗДЕСЬ ЗАДАЮТСЯ ВПЕРВЫЕ НО ДЛЯ УДОБСТВА ОНИ МОГУТ СООТВЕТСТВОВАТЬ НАЗВАНИЯМ КЛАССОВ ЭЛМЕМЕНТОВ КОТОРЫЕ БУДУТ РАСПОЛАГАТЬСЯ НА ИХ МЕСТАХ. Т.К. В КАЖДОЙ СТРОКЕ ПО ДВА СЛОВА СООТВЕТСТВЕННО НА ВСЕЙ СТРАНИЦЕ САЙТА БУДУЕТ ДВЕ КОЛОНКИ, НО В КАКИХ ТО МЕСТАХ (ТАМ ГДЕ В СТРОКЕ СЛОВА ОДИНАКОВЫЕ) КОЛОНКИ БУДУТ СЛИВАТЬСЯ В ОДНУ.
        "image_1 image_1"
        "title_2 title_2"
        "text_2 text_2"
        "title_3 title_3"
        "image_3 text_3"
        "title_4 title_4"
        "text_4 image_4" 
        "footer footer"; ИТОГО У НАС ПОЛУЧИЛОСЬ ЧТО НА СТРАНИЦЕ МЫ ХОТИМ РАЗМЕТИТЬ 10 РАЗНЫХ ЯЧЕЕК СООТВЕТСТВЕННО НУЖНО ПРОПИСАТЬ 10 РАЗНЫХ КЛАССОВ ДЛЯ НИХ

      grid-auto-rows: auto; СТРОКИ ПРИНИМАЮТ ВЫСОТУ В ЗАВИСИМОСТЬ ОТ НАПОЛНЕНИЯ
      width: 100%; А ШИРИНА ПОЛНАЯ?
      max-width: 900px; ПРИ ЭТОМ МАКСИМАЛЬНАЯ ШИРИНА ВСЕГО КОНТЕЙНЕРА НА СТРАНИЦЕ НЕ ДОЛЖНА ПРЕВЫШАТЬ 900 ПИКСЕЛЕЙ
      margin: 0 auto; ЭТО ДЛЯ ВЫРАВНИВАНИЯ ПО ЦЕНТРУ 
    }
    .item{
      padding: 10px;
      border: 1px solid black; НАЧИНАЕМ ПРОПИСЫВАТЬ КЛАССЫ: ЭТОТ КЛАСС НЕ ОТНОСИТСЯ К ТЕМ 10 ИЗ grid-template-areas:, А НУЖЕН БЫЛ ЧТОБЫ НАСТРОИТЬ ОТОБРАЖЕНИЕ БЛОКОВ СЕТКИ. ПОСКОЛЬКУ В HTML ДЛЯ КАЖДОГО БЛОКА БЫЛ ЗАДАН КЛАСС ITEM ТО ОН БУДЕТ РАСПРОСТРАНЯТЬСЯ НА НИХ ВСЕХ
    }
    .title_1{
      grid-area: header; ЭТО УЖЕ ПРОПИСЫВАЕТСЯ 1 КЛАСС К grid-template-areas И В grid-area ПРОПИСЫВАЕТСЯ ЧТО ОН БУДЕТ В СЕТКЕ БУДЕТ ВЕСТИ СЕБЯ КАК СЛОВО ПРОПИСАННОЕ ВЫШЕ В grid-template-areas ТО ЕСТЬ ЭТО МОЖЕТ БЫТЬ ЛЮБОЕ СЛОВО, ЭТО ПРОСТО НАЗВАНИЕ.
    }
    .image_1{
      grid-area: image_1; АНАЛОГИЧНО С ЭТИМ
    }
    .title_2{
      grid-area: title_2;
    }
    .text_2{
      grid-area: text_2; И С ЭТИМ 
    }
    .title_3{
      grid-area: title_3;
    }
    .text_3{
      grid-area: text_3;
    }
    .image_3{
      grid-area: image_3;
    }
    .title_4{
      grid-area: title_4;
    }
    .image_4{
      grid-area: image_4;
    }
    .text_4{
      grid-area: text_4;
    }
    .footer{
      grid-area: footer; И НАКОНЕЦ С ЭТИМ
    }
    .img{А ТУТ МЫ ОПИСЫВАЕМ ОТДЕЛЬНЫЙ КЛАСС КОТОРЫЙ МЫ СОЗДАЛИ В HTML ДЛЯ ВСЕХ КАРТИНОК.
      object-fit: cover; ПРОПОРЦИИ СОХРАНЯТСЯ НО ВСЕ ЧТО НЕ ПОМЕСТИТСЯ В РОДИТЕЛЬНСКИЙ ЭЛЕМЕНТ ОБРЕЖЕТСЯ
      width: 100%; ЦЕЛИКОМ ЗАПОЛНЯЕТ БЛОК ПО ШИРИНЕ. НО ПРИ УМЕНЬШЕНИИ ШИРИНЫ ОКНА ЧАСТЬ ИЗОБРАЖЕНИЯ БУДЕТ СЪЕДАТЬСЯ ПОТОМУ ЧТО []
      height: 100%; И ПО ВЫСОТЕ. КАРТИНКА БУДЕТ 100% СОХРАНЯТЬ ВСЮ СВОЮ ШИРИНУ, ПОТОМУ ЧТО В [grid-auto-rows: auto; СТРОКИ ПРИНИМАЮТ ВЫСОТУ В ЗАВИСИМОСТЬ ОТ НАПОЛНЕНИЯ]
    }
    .img_header{
      object-fit: cover;
      width: 100%;
      height: 350px;
    }

КОД НИЖЕ: ЭТО НАЗЫВАЕТСЯ МЕДИАЗАПРОС CSS ОН ПОЗВОЛЯЕТ ПЕРЕСТРОИТЬ ОТОБРАЖЕНИЕ МАКЕТА В ЗАВИСИМОСТИ ОТ УСТРОЙСТВА, ОТ ШИРИНЫ ЭКРАНА, ЧТОБЫ ВСЁ БЫЛО АККУРАТНО.
МОЖНО ВЫПИСАТЬ ТОЛЬКО ТО ЧТО КАСАЕТСЯ КЛАССА КОНТЕЙНЕРА ПОСКОЛЬКУ ТРЕБУЕТСЯ ТОЛЬКО ЕГО ИЗМЕНЕНИЕ. ЦЕЛИКОМ ВСЕ КЛАССЫ ВЫПИСЫВАТЬ НЕ НАДО.

@media screen and (max-width: 600px) { screen – для устройств с экранами; У КОТОРЫХ МАКСИМАЛЬНАЯ ШИРИНА 600 ТО ЕСТЬ SCREEN И MAX-WIDTH ЭТО УСЛОВИЯ

    .container{
      display: grid;
      grid-template-areas: 
        "header header"
        "image_1 image_1"
        "title_2 title_2"
        "text_2 text_2"
        "title_3 title_3"
        "image_3 image_3"
        "text_3 text_3"
        "title_4 title_4"
        "image_4 image_4"
        "text_4 text_4"
        "footer footer";
      grid-auto-rows: auto;
      width: 100%;
      max-width: 900px;
      margin: 0 auto;
    }


}